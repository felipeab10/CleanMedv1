@model CleanMed.Models.TabelaFatuProcedimento
@{
    ViewBag.Current = "Scheduler";
}
<section class="content container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3>
                        Atualizar valor do procedimento
                    </h3>
                </div>
                <div class="box-body">
                    <form asp-controller="TabelaFatuProcedimentos" asp-action="Edit">
                        <input asp-for="TabelaFatuProcedimentoId" type="hidden" />
                        <input asp-for="TabelaFaturamentoId" type="hidden" />
                        <input name="ConvenioId" value="@ViewBag.ConvenioId" type="hidden" />
                        <div class="row">

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label" asp-for="ProcedimentoId"></label>
                                    <!--<input id="ProcedimentoId" asp-for="ProcedimentoId" class="form-control" type="text" />-->
                                    <select id="combobox" class="form-control" asp-for="ProcedimentoId" asp-items="@ViewBag.ProcedimentoId">
                                        <option value="" selected disabled>Selecione uma opção</option>

                                    </select>

                                    <span asp-validation-for="ProcedimentoId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="DataVigencia" class="control-label"></label>
                                    <input type="text" class="form-control" id="DataVigencia" asp-for="@Model.DataVigencia" />
                                    <span asp-validation-for="DataVigencia" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="ValorTotal" class="control-label"></label>
                                    <input class="form-control" name="ValorTotal" value="@Model.ValorTotal" type="text" />
                                    <span asp-validation-for="ValorTotal" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Status">
                                        <select asp-for="Status" class="form-control">
                                            <option value="" selected disabled>Selecione uma opção</option>
                                            <option value="true">Ativo</option>
                                            <option value="false">Inativo</option>
                                        </select>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <a asp-action="ValorProcedimento" asp-route-ConvenioId="@ViewBag.ConvenioId" asp-controller="TabelaFatuProcedimentos" asp-route-TabelaFaturamentoId="@ViewBag.TabelaFaturamentoId" class="btn btn-danger">Cancelar</a>&nbsp;<button type="submit" class="btn btn-success">Salvar</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>

</section>
@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(function () {
            $.widget("custom.combobox", {
                _create: function () {
                    this.wrapper = $("<span>")
                        .addClass("custom-combobox")
                        .insertAfter(this.element);

                    this.element.hide();
                    this._createAutocomplete();
                    this._createShowAllButton();
                },

                _createAutocomplete: function () {
                    var selected = this.element.children(":selected"),
                        value = selected.val() ? selected.text() : "";

                    this.input = $("<input>")
                        .appendTo(this.wrapper)
                        .val(value)
                        .attr("title", "")
                        .addClass("form-control disabled")
                        .autocomplete({
                            delay: 0,
                            minLength: 2,
                            source: $.proxy(this, "_source")
                        })
                        .tooltip({
                            classes: {
                                "ui-tooltip": "ui-state-highlight"
                            }
                        });

                    this._on(this.input, {
                        autocompleteselect: function (event, ui) {
                            ui.item.option.selected = true;
                            this._trigger("select", event, {
                                item: ui.item.option
                            });
                        },

                        autocompletechange: "_removeIfInvalid"
                    });
                },

                _createShowAllButton: function () {
                    var input = this.input,
                        wasOpen = false;

                    $("<a>")
                        .attr("tabIndex", -1)
                        .attr("title", "Show All Items")
                        .tooltip()
                        .appendTo(this.wrapper)
                        .button({
                            icons: {
                                primary: "ui-icon-triangle-1-s"
                            },
                            text: false
                        })
                        .removeClass("ui-corner-all")
                        .addClass("custom-combobox-toggle ui-corner-right")
                        .on("mousedown", function () {
                            wasOpen = input.autocomplete("widget").is(":visible");
                        })
                        .on("click", function () {
                            input.trigger("focus");

                            // Close if already visible
                            if (wasOpen) {
                                return;
                            }

                            // Pass empty string as value to search for, displaying all results
                            input.autocomplete("search", "");
                        });
                },

                _source: function (request, response) {
                    var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                    response(this.element.children("option").map(function () {
                        var text = $(this).text();
                        if (this.value && (!request.term || matcher.test(text)))
                            return {
                                label: text,
                                value: text,
                                option: this
                            };
                    }));
                },

                _removeIfInvalid: function (event, ui) {

                    // Selected an item, nothing to do
                    if (ui.item) {
                        return;
                    }

                    // Search for a match (case-insensitive)
                    var value = this.input.val(),
                        valueLowerCase = value.toLowerCase(),
                        valid = false;
                    this.element.children("option").each(function () {
                        if ($(this).text().toLowerCase() === valueLowerCase) {
                            this.selected = valid = true;
                            return false;
                        }
                    });

                    // Found a match, nothing to do
                    if (valid) {
                        return;
                    }

                    // Remove invalid value
                    this.input
                        .val("")
                        .attr("title", value + " didn't match any item")
                        .tooltip("open");
                    this.element.val("");
                    this._delay(function () {
                        this.input.tooltip("close").attr("title", "");
                    }, 2500);
                    this.input.autocomplete("instance").term = "";
                },

                _destroy: function () {
                    this.wrapper.remove();
                    this.element.show();
                }
            });

            $("#combobox").disable();
            $("#toggle").on("click", function () {
                $("#combobox").toggle();
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#selectlist").hide();
            $("#ProcedimentoId").autocomplete({

                /*  source: '/TabelaFatuProcedimentos/Procedimento',
                 minLength: 3,
                 select: function (event, ui) {
                     log("selected: " + ui.item.ProcedimentoId);
                 }
                  */
                source: function (request, response) {
                    $.ajax({
                        url: "/TabelaFatuProcedimentos/Procedimento",
                        type: "POST",
                        data: { Prefix: request.term },
                        success: function (data) {
                            $("#teste").val(data.procedimentoId);
                            response($.map(data, function (item) {
                                return { label: item.ProcedimentoId, value: item.ProcedimentoId };
                            }))
                        }
                    })
                },

            });

        });
        $("input[id*='DataVigencia']").inputmask({
            mask: ['99/99/9999'],
            keepStatic: true
        });
        $("input[id*='Telefone2']").inputmask({
            mask: ['(99)9999-9999', '(99)9 9999-9999'],
            keepStatic: true
        });
        function InputToUpper(obj) {
            if (obj.value != "") {
                obj.value = obj.value.toUpperCase();
            }
        }


    </script>
}