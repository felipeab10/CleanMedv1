@model CleanMed.Models.RecursoAgendamento
@{
    ViewBag.Current = "RecursoAgendamentos";
}
<section class="content container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3>
                        Adicionar Recurso
                    </h3>
                </div>
                <div class="box-body">
                    <form asp-controller="RecursoAgendamentos" asp-action="Edit">
                        <input asp-for="RecursoAgendamentoId" type="hidden" />

                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label asp-for="Descricao" class="control-label"></label>
                                    <input type="text" class="form-control" asp-for="@Model.Descricao" onkeyup="InputToUpper(this)" />
                                    <span asp-validation-for="Descricao" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label asp-for="Sigla" class="control-label"></label>
                                    <input type="text" onkeyup="InputToUpper(this)" class="form-control" asp-for="@Model.Sigla" />
                                    <span asp-validation-for="Sigla" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Tipo" class="control-label"></label>
                                    <select class="form-control" asp-for="Tipo" asp-items="@ViewBag.Tipo">
                                        <option value="" selected disabled>Selecione uma opção</option>
                                    </select>
                                    <span asp-validation-for="Tipo" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Status" class="control-label"></label>
                                    <select class="form-control" asp-for="Status" asp-items="@ViewBag.Status">
                                        <option value="" selected disabled>Selecione uma opção</option>
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <a asp-action="Index" class="btn btn-danger">Cancelar</a>&nbsp;<button type="submit" class="btn btn-success">Salvar</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>

</section>
@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {

        });
        $("input[id*='Telefone1']").inputmask({
            mask: ['(99)9999-9999', '(99)9 9999-9999'],
            keepStatic: true
        });
        $("input[id*='Telefone2']").inputmask({
            mask: ['(99)9999-9999', '(99)9 9999-9999'],
            keepStatic: true
        });
        function InputToUpper(obj) {
            if (obj.value != "") {
                obj.value = obj.value.toUpperCase();
            }
        }


    </script>
}